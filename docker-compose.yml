services:
  code:
    image: lscr.io/linuxserver/code-server:4.101.1
    container_name: code-server
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/Toronto"

      # Read login password from this file on container (re)start
      FILE__PASSWORD: "/config/.gitstrap/codepass.txt"

      # Optional: used by your gitstrap bootstrap flow
      GH_USER: "${GH_USER}"
      GH_PAT: "${GH_PAT}"
      GIT_NAME: "${GIT_NAME}"
      GIT_EMAIL: "${GIT_EMAIL}"
      GIT_REPOS: "${GIT_REPOS}"
      GIT_BASE_DIR: "/config/workspace"

    volumes:
      - code-config:/config1
      - code-config:/config
      - projects:/config/workspace
      - ./settings.json:/config/gitstrap/settings.json:ro
      - ./gitstrap.sh:/custom-cont-init.d/10-gitstrap.sh:ro
      - ./codepass.sh:/custom-cont-init.d/20-codepass.sh:ro
      # (No docker.sock or dockersock-group here anymore)

    ports:
      - ":8443"   # or "8443:8443"

    restart: always

  # Sidecar that watches the password file and restarts the code-server container when it changes
  restartd:
    image: alpine:3.20
    container_name: code-server-restartd
    user: "0:0"
    depends_on:
      - code
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock         # RW: restart via Docker API
    command: >
      sh -eu -c '
        apk add --no-cache curl busybox-extras >/dev/null;
        echo "[restartd] HTTP trigger listening on :9000 (GET /)";
        while :; do
          # serve one request and immediately restart the code-server container
          # respond "OK" to the client so the task finishes fast
          { printf "HTTP/1.1 200 OK\r\nContent-Length: 2\r\n\r\nOK"; } \
            | nc -l -p 9000 -q 0 >/dev/null 2>&1 || true;
          echo "[restartd] trigger received -> restarting code-server";
          curl --unix-socket /var/run/docker.sock -s -o /dev/null -w "[restartd] docker api returned %{http_code}\n" \
            -X POST http://localhost/v1.41/containers/code-server/restart || true;
        done
      '
    restart: always


volumes:
  code-config:
  projects:
