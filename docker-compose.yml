services:
  code:
    image: lscr.io/linuxserver/code-server:4.101.1
    container_name: code-server
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/Toronto"

      # Read login password from this file on container (re)start
      FILE__PASSWORD: "/config/.gitstrap/codepass.txt"

      # Optional: used by your gitstrap bootstrap flow
      GH_USER: "${GH_USER}"
      GH_PAT: "${GH_PAT}"
      GIT_NAME: "${GIT_NAME}"
      GIT_EMAIL: "${GIT_EMAIL}"
      GIT_REPOS: "${GIT_REPOS}"
      GIT_BASE_DIR: "/config/workspace"

    volumes:
      - code-config:/config
      - projects:/config/workspace
      - ./settings.json:/config/gitstrap/settings.json:ro
      - ./gitstrap.sh:/custom-cont-init.d/10-gitstrap.sh:ro
      - ./codepass.sh:/custom-cont-init.d/20-codepass.sh:ro
      # (No docker.sock or dockersock-group here anymore)

    ports:
      - ":8443"   # or "8443:8443"

    restart: always

  # Sidecar that watches the password file and restarts the code-server container when it changes
  restartd:
    image: curlimages/curl:8.8.0
    container_name: code-server-restartd
    user: "0:0"                                  # <â€” run as root so it can read 600 files
    depends_on:
      - code
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - code-config:/config:ro
    command:
      - /bin/sh
      - -eu
      - -c
      - |
          echo "[restartd] watching /config/.gitstrap/codepass.txt for changes to restart code-server"
          last=""
          while :; do
            cur="$(cat /config/.gitstrap/codepass.txt 2>/dev/null || true)"
            if [ -n "$cur" ] && [ "$cur" != "$last" ]; then
              last="$cur"
              echo "[restartd] change detected; requesting restart of code-server"
              code="$(curl --unix-socket /var/run/docker.sock -s -o /dev/null -w '%{http_code}' \
                -X POST http://localhost/v1.41/containers/code-server/restart || true)"
              echo "[restartd] docker api returned $code"
            fi
            sleep 2
          done
    restart: always

volumes:
  code-config:
  projects:
