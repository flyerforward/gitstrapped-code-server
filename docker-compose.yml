services:
  code:
    image: lscr.io/linuxserver/code-server:4.101.1
    container_name: code-server
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/Toronto"

      # Read login password from this file on container (re)start
      FILE__PASSWORD: "/config/.gitstrap/codepass.txt"

      # Optional: used by your gitstrap bootstrap flow
      GH_USER: "${GH_USER}"
      GH_PAT: "${GH_PAT}"
      GIT_NAME: "${GIT_NAME}"
      GIT_EMAIL: "${GIT_EMAIL}"
      GIT_REPOS: "${GIT_REPOS}"
      GIT_BASE_DIR: "/config/workspace"

    volumes:
      - code-config:/config
      - projects:/config/workspace
      - ./settings.json:/config/gitstrap/settings.json:ro
      - ./gitstrap.sh:/custom-cont-init.d/10-gitstrap.sh:ro
      - ./codepass.sh:/custom-cont-init.d/20-codepass.sh:ro
      # (No docker.sock or dockersock-group here anymore)

    ports:
      - ":8443"   # or "8443:8443"

    restart: always

  # Sidecar that watches the password file and restarts the code-server container when it changes
  restartd:
    image: curlimages/curl:8.8.0
    container_name: code-server-restartd
    depends_on:
      - code
    environment:
      CONTAINER_NAME: "code-server"
      PASSWORD_FILE: "/config/.gitstrap/codepass.txt"
      DOCKER_SOCK: "/var/run/docker.sock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   # RW so it can call the Docker API
      - code-config:/config:ro                      # read the same /config volume to watch the password file
    command: >
      sh -eu -c '
        echo "[restartd] watching $PASSWORD_FILE for changes to restart $CONTAINER_NAME";
        last="";
        while :; do
          ts="$(stat -c %Y "$PASSWORD_FILE" 2>/dev/null || true)";
          if [ -n "$ts" ] && [ "$ts" != "$last" ]; then
            last="$ts";
            echo "[restartd] change detected; requesting restart";
            code="$(curl --unix-socket "$DOCKER_SOCK" -s -o /dev/null -w "%{http_code}" -X POST "http://localhost/v1.41/containers/${CONTAINER_NAME}/restart" || true)";
            echo "[restartd] docker api returned $code";
          fi;
          sleep 2;
        done'
    restart: always

volumes:
  code-config:
  projects:
