services:
  code:
    image: lscr.io/linuxserver/code-server:4.101.1
    container_name: code-server
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "America/Toronto"

      # Read login password from this file on container (re)start
      FILE__PASSWORD: "/config/.gitstrap/codepass.txt"

      # Optional: used by your gitstrap bootstrap flow
      GH_USER: "${GH_USER}"
      GH_PAT: "${GH_PAT}"
      GIT_NAME: "${GIT_NAME}"
      GIT_EMAIL: "${GIT_EMAIL}"
      GIT_REPOS: "${GIT_REPOS}"
      GIT_BASE_DIR: "/config/workspace"

    volumes:
      - code-config:/config
      - projects:/config/workspace
      - ./settings.json:/config/gitstrap/settings.json:ro
      - ./gitstrap.sh:/custom-cont-init.d/10-gitstrap.sh:ro
      - ./codepass.sh:/custom-cont-init.d/20-codepass.sh:ro

    ports:
      - ":8443"   # or "8443:8443"

    # Allow calling the sidecar via host.docker.internal
    extra_hosts:
      - "host.docker.internal:host-gateway"

    restart: always
    networks:
      appnet: {}

  restartd:
    image: alpine:3.20
    container_name: code-server-restartd
    user: "0:0"
    depends_on:
      - code
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Expose to the host so the code container can always hit it via host.docker.internal:19000
    ports:
      - "19000:9000"
    command:
      - /bin/sh
      - -ceu
      - |
        apk add --no-cache curl socat >/dev/null
        cat >/usr/local/bin/restart-hook <<'EOF'
        #!/usr/bin/env sh
        # read request line
        IFS= read -r req || req=""
        # eat headers
        while IFS= read -r line; do [ -z "$line" ] && break; done
        # log request
        echo "[restartd] request: ${req}" >&2
        # route: only /restart triggers a restart; /health is no-op
        case "$req" in
          *" /restart "*) action=restart ;;
          *" /health "*)  action=health  ;;
          *)              action=noop    ;;
        esac
        # respond quickly
        printf "HTTP/1.1 200 OK\r\nContent-Length: 2\r\nConnection: close\r\n\r\nOK"
        # background restart so response returns immediately
        if [ "$action" = restart ]; then
          curl --unix-socket /var/run/docker.sock -s -o /dev/null \
            -X POST http://localhost/v1.41/containers/code-server/restart >/dev/null 2>&1 &
        fi
        EOF
        chmod +x /usr/local/bin/restart-hook
        echo "[restartd] listening on :9000 (/restart to restart, /health no-op)"
        # IMPORTANT: run via sh so heredoc indentation can't break the shebang
        exec socat TCP-LISTEN:9000,reuseaddr,fork,keepalive,crlf \
          EXEC:"/bin/sh /usr/local/bin/restart-hook",setsid,pty,stderr
    restart: always
    networks:
      appnet: {}

networks:
  appnet:
    name: codeserver_appnet

volumes:
  code-config:
  projects:
